{"version":3,"names":[],"mappings":"","sources":["Core/Generators/DgmlGenerator.js"],"sourcesContent":["\"use strict\";\nvar Utilities = require(\"../Utilities\");\nvar builder = require(\"xmlbuilder\");\nvar DgmlGenerator = (function () {\n    function DgmlGenerator() {\n    }\n    DgmlGenerator.prototype.generate = function (nodes) {\n        return this.getNodeXml(nodes);\n    };\n    DgmlGenerator.prototype.getNodeXml = function (nodes) {\n        var completeNodes = nodes;\n        var objectNodes = Utilities.toSerializableNodes(completeNodes);\n        var nodeMap = {};\n        objectNodes.forEach(function (n) {\n            nodeMap[n.Id] = n;\n        });\n        var doc = builder.create(\"DirectedGraph\");\n        var nodesEle = doc.ele(\"Nodes\");\n        var linksEle = doc.ele(\"Links\");\n        var _loop_1 = function(id) {\n            var node = nodeMap[id];\n            switch (node.KindName) {\n                case \"Class\":\n                case \"Interface\":\n                    if (node.KindName === \"Class\" || node.KindName === \"Interface\") {\n                        nodesEle.ele(\"Node\", {\n                            Category: node.KindName === \"Class\" ? \"CodeSchema_Class\" : \"CodeSchema_Interface\", Group: \"Collapsed\", Id: id, Label: node.KindName === \"Class\" ? node.Name : \"Interface:\" + node.Name\n                        });\n                    }\n                    node.BaseTypes.forEach(function (baseNode) {\n                        linksEle.ele(\"Link\", { Source: baseNode, Target: id });\n                    });\n                    break;\n                case \"Module\":\n                    nodesEle.ele(\"Node\", {\n                        Id: id, Label: node.Name, Group: \"Expanded\", Category: \"CodeSchema_Namespace\"\n                    });\n                    break;\n            }\n            if (node.Parent) {\n                linksEle.ele(\"Link\", { Source: node.Parent, Target: id, Category: \"Contains\" });\n            }\n        };\n        for (var id in nodeMap) {\n            _loop_1(id);\n        }\n        doc.att(\"xmlns\", \"http://schemas.microsoft.com/vs/2009/dgml\");\n        this.addStyles(doc);\n        return doc.end({ pretty: true });\n    };\n    DgmlGenerator.prototype.addStyles = function (xmlRoot) {\n        var styles = xmlRoot.ele(\"Styles\");\n        styles.ele({\n            \"#list\": [{\n                    Style: {\n                        TargetType: \"Node\",\n                        GroupLabel: \"Class\",\n                        ValueLabel: \"Has category\",\n                        Condition: { Expression: \"HasCategory('CodeSchema_Type')\" },\n                        \"#list\": [\n                            { Setter: { Property: \"Background\", Value: \"#FF1382CE\" } },\n                            { Setter: { Property: \"Stroke\", Value: \"#FF1382CE\" } },\n                            { Setter: { Property: \"Icon\", Value: \"CodeSchema_Class\" } },\n                        ]\n                    }\n                },\n                {\n                    Style: {\n                        TargetType: \"Node\",\n                        GroupLabel: \"Namespace\",\n                        ValueLabel: \"Has category\",\n                        Condition: { Expression: \"HasCategory('CodeSchema_Namespace')\" },\n                        \"#list\": [\n                            { Setter: { Property: \"Background\", Value: \"#FF0E619A\" } },\n                            { Setter: { Property: \"Stroke\", Value: \"#FF0E619A\" } },\n                            { Setter: { Property: \"Icon\", Value: \"CodeSchema_Namespace\" } },\n                        ]\n                    }\n                },\n                {\n                    Style: {\n                        TargetType: \"Node\",\n                        GroupLabel: \"Interface\",\n                        ValueLabel: \"Has category\",\n                        Condition: { Expression: \"HasCategory('CodeSchema_Interface')\" },\n                        \"#list\": [\n                            { Setter: { Property: \"Background\", Value: \"#FF1382CE\" } },\n                            { Setter: { Property: \"Stroke\", Value: \"#FF1382CE\" } },\n                            { Setter: { Property: \"Icon\", Value: \"CodeSchema_Interface\" } },\n                        ]\n                    }\n                }\n            ]\n        });\n    };\n    return DgmlGenerator;\n}());\nexports.__esModule = true;\nexports[\"default\"] = DgmlGenerator;\n"],"file":"DgmlGenerator.js"}