{"version":3,"names":[],"mappings":"","sources":["Core/Utilities.js"],"sourcesContent":["\"use strict\";\nvar fs = require(\"fs\");\nvar ProcessorFile_1 = require(\"./ProcessorFile\");\nvar SerializableNode_1 = require(\"./SerializableNode\");\nfunction randomInt(low, high) {\n    return Math.floor(Math.random() * (high - low) + low);\n}\nexports.randomInt = randomInt;\nfunction toSerializableNodes(nodes) {\n    var newNodes = [];\n    for (var name_1 in nodes) {\n        var item = nodes[name_1];\n        newNodes.push(new SerializableNode_1[\"default\"](item));\n    }\n    return newNodes;\n}\nexports.toSerializableNodes = toSerializableNodes;\nfunction getFilePaths(dir, files, filter) {\n    var _this = this;\n    var fileTree = fs.readdirSync(dir);\n    fileTree.forEach(function (f) {\n        var path = dir + \"\\\\\" + f;\n        var fStat = fs.lstatSync(path);\n        if (fStat.isDirectory()) {\n            _this.getFilePaths(path, files, filter);\n        }\n        else if (fStat.isFile()) {\n            if (filter && filter(path)) {\n                var procFile = new ProcessorFile_1[\"default\"](path);\n                files.push(procFile);\n            }\n            else if (!filter) {\n                var procFile = new ProcessorFile_1[\"default\"](path);\n                files.push(procFile);\n            }\n        }\n    });\n}\nexports.getFilePaths = getFilePaths;\n"],"file":"Utilities.js"}