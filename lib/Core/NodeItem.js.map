{"version":3,"sources":["lib/Core/NodeItem.ts"],"names":[],"mappings":"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","file":"NodeItem.js","sourcesContent":["import * as tss from \"typescript\";\nimport { INodeList } from \"./INodeList\";\n\nexport default class NodeItem {\n    Parent: NodeItem;\n    Children: INodeList = {};\n    FullName: string;\n    Name: string;\n    KindName: string;\n    BaseTypes: NodeItem[] = [];\n    Variables: NodeItem[] = [];\n    Parameters: NodeItem[] = [];\n    Id: number;\n    Loc: number = 0;\n    OriginalNode: tss.Node;\n\n    static IdCounter = 0;\n\n    constructor() {\n        this.Id = ++NodeItem.IdCounter;\n    }\n\n    static fromNode(node: tss.Node): NodeItem {\n        if (NodeItem.IsSupportedKindNode(node)) {\n            let casted = <tss.ClassLikeDeclaration>node;\n            let nodeItem = new NodeItem();\n            nodeItem.OriginalNode = node;\n            nodeItem.KindName = NodeItem.getKindName(node.kind);\n            nodeItem.Name = casted.name.text;\n            nodeItem.FullName = NodeItem.getFullName(node);\n            return nodeItem;\n        }\n        return null;\n    }\n\n    static getKindName(kind: tss.SyntaxKind) {\n        switch (kind) {\n            case tss.SyntaxKind.ClassDeclaration:\n                return \"Class\";\n            case tss.SyntaxKind.InterfaceDeclaration:\n                return \"Interface\";\n            case tss.SyntaxKind.ModuleDeclaration:\n                return \"Module\";\n        }\n        return null;\n    }\n\n    resolveParent(typeDictionary: INodeList) {\n        if (this.OriginalNode.parent) {\n            let names = this.FullName.split(\".\");\n            let parentName = names.slice(0, names.length - 1).join(\".\");\n            let parent = typeDictionary[parentName];\n            if (parent) {\n                this.Parent = parent;\n            }\n        }\n\n    }\n\n    static getFullName(node: tss.Node): string {\n        let parents: tss.Node[] = [];\n        let originalNode = node;\n        while (node.parent) {\n            parents.push(node.parent);\n            node = node.parent;\n        }\n        let names = parents.filter((p) => NodeItem.IsSupportedKindNode(p)).map((p) => this.getName(p)).reverse();\n        let seperator = names.length === 0 ? \"\" : \".\";\n        return `${names.join(\".\")}${seperator}${this.getName(originalNode)}`;\n    }\n\n    static getName(node: tss.Node) {\n        if (NodeItem.IsSupportedKindNode(node)) {\n            let casted = <tss.ClassLikeDeclaration>node;\n            return casted.name.text;\n        }\n        return null;\n    }\n\n    static IsSupportedKindNode(node: tss.Node) {\n        return NodeItem.IsSupportedKind(node.kind);\n    }\n\n    static IsSupportedKind(kind: tss.SyntaxKind) {\n        switch (kind) {\n            case tss.SyntaxKind.ClassDeclaration:\n                return true;\n            case tss.SyntaxKind.InterfaceDeclaration:\n                return true;\n            case tss.SyntaxKind.ModuleDeclaration:\n                return true;\n        }\n        return false;\n    }\n\n}"]}